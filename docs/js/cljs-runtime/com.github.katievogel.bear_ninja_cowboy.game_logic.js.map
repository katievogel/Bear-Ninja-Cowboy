{"version":3,"sources":["com/github/katievogel/bear_ninja_cowboy/game_logic.cljs"],"mappings":";AAQA,AAAA,AAAMA,AAAkBC,AAAUC;AAAlC,AACE,AACE,AAACC,AAAEF,AAAUC;AADf;;AAAA,AAEE,AAAK,AAAA,AAACC,AAAEF,AAAiB,AAAA,AAACE,AAAED;AAF9B;;AAAA,AAGE,AAAK,AAAA,AAACC,AAAEF,AAAiB,AAAA,AAACE,AAAED;AAH9B;;AAAA,AAIE,AAAK,AAAA,AAACC,AAAEF,AAAkB,AAAA,AAACE,AAAED;AAJ/B;;AAAA,AAKE,AAAK,AAAA,AAACC,AAAEF,AAAkB,AAAA,AAACE,AAAED;AAL/B;;AAAA,AAME,AAAK,AAAA,AAACC,AAAEF,AAAmB,AAAA,AAACE,AAAED;AANhC;;AAAA,AAOE,AAAK,AAAA,AAACC,AAAEF,AAAmB,AAAA,AAACE,AAAED;AAPhC;;AAAA,AAAA;;;;;;;;;;AAUF,AAKA,AAAQ,AAAA,AAACC,AAAE,AAAA,AAAA,AAACH;AAAZ;AAAA,AAAA,AAAA,AAAAI,AAAA","names":["com.github.katievogel.bear-ninja-cowboy.game-logic/determine-winner","p1-choice","p2-choice","cljs.core._EQ_","js/Error"],"sourcesContent":["(ns com.github.katievogel.bear-ninja-cowboy.game-logic)\n\n;; Rules:\n; - Bear bites Ninja\n; - Ninja strikes Cowboy\n; - Cowboy shoots Bear\n\n;; TODO: this good candidate for a few unit tests or assets (see below)\n(defn determine-winner [p1-choice p2-choice]\n  (cond\n    (= p1-choice p2-choice) :tie\n    (and (= p1-choice :bear) (= p2-choice :ninja)) :p1\n    (and (= p1-choice :bear) (= p2-choice :cowboy)) :p2\n    (and (= p1-choice :ninja) (= p2-choice :bear)) :p2\n    (and (= p1-choice :ninja) (= p2-choice :cowboy)) :p1\n    (and (= p1-choice :cowboy) (= p2-choice :bear)) :p1\n    (and (= p1-choice :cowboy) (= p2-choice :ninja)) :p2\n    :else nil)) ;; NOTE: this should never happen\n\n(comment\n  (determine-winner :bear :ninja)\n  (determine-winner :bear :cowboy)\n  (determine-winner :bear :bear))\n\n(assert (= (determine-winner :bear :ninja) :p1))\n"]}