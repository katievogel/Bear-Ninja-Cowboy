{"version":3,"sources":["com/github/katievogel/bear_ninja_cowboy/api_connections.cljs"],"mappings":";AAOA,AAAA,AAAMA,AAAYC,AAAOC;AAAzB,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAGgC,AAAAC,AAAMH;AAANG,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA,AAAA,AAAAE,AAAA,AAAA,AAAAF;;;AAHjC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AASiC,AAAA,AAACG,AAGX,AAAKC;AAAL,AACE,AAAAC,AAAkB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAOF;AAA1B,AAAA,AAAAC,AAAAA,AAACP,AAAAA,AAAAA;AAb1B,AAcuB,AAAKS;AAAL,AAAQ,AAAA,AAACC,AAAgBD;AAdhD,AAAA,AAAA,AAAA;;AAmBF","names":["com.github.katievogel.bear-ninja-cowboy.api-connections/fetch-gif!","winner","success-callback","ajax.core.GET","G__51735","cljs.core/Keyword","js/Error","cljs.core/rand-int","gif-url","G__51738","cljs.core.get_in","e","cljs.core.println"],"sourcesContent":["(ns com.github.katievogel.bear-ninja-cowboy.api-connections\n  (:require [ajax.core :refer [GET]]))\n\n;connect to giphy API\n;generate bear, ninja, or cowboy using winner as search query\n\n\n(defn fetch-gif! [winner success-callback]\n  (GET \"https://api.giphy.com/v1/gifs/search\"\n       {:method          :get\n        :params          {:api_key \"FgUBaM6Yua0703Df7Y2I4lrReCPOiw54\"\n                          :q       (case winner\n                                     :bear \"bear\"\n                                     :ninja \"ninja\"\n                                     :cowboy \"cowboy\"\n                                     :tie \"tug of war\")\n                          :limit   100\n                          :offset  (rand-int 25)\n                          :rating  \"g\"\n                          :lang    \"en\"}\n        :handler         (fn [gif-url]\n                           (success-callback (get-in gif-url [:data 0 :images :downsized_medium :url])))\n        :error-handler   (fn [e] (println \"error\" e))\n        :response-format :json\n        :keywords?       true}))\n\n;test case for debugging\n(comment\n  (fetch-gif! :bear)\n  (fetch-gif! :ninja)\n  (fetch-gif! :cowboy)\n  (def result (atom nil))\n  (fetch-gif! :bear (fn [v]\n                      (reset! result v)\n                      (println \"success\" v))))\n;@result\n;(get-in @result [:data 0 :images :downsized_medium :url])\n"]}