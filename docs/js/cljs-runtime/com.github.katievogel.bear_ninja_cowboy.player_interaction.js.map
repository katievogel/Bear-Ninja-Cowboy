{"version":3,"sources":["com/github/katievogel/bear_ninja_cowboy/player_interaction.cljs"],"mappings":";AAMA,AAAA,AAAMA,AAAcC;AAApB,AACE,AAAA,AAACC,AAAoBD;;AACrB,AAAME,AAAU,AAAA,AAAA,AAAA,AAAA,AAACC;AACXC,AAAO,AAACC,AAAiBL,AAAUE;AADzC,AAEE,AAACI,AAAW,AAAAC,AAAMH;AAANG,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAA;AAAA;AACMP;;;AADN;AAEME;;;AAFN;AAAA;;;;AAAA,AAAA,AAAAO,AAAA,AAAA,AAAAF;;;AAIA,AAAKG;AAAL,AACE,AAACC,AAAMC,AAAO,AAAKC;AAAL,AACE,AAAA,AAACC,AAAMD,AAAcH;;;;AACnD,AAACC,AAAMC,AAAO,AAAKC;AAAL,AACE,AAAA,AAAA,AAAA,AAAA,AAACC,AAAMD,AACMb,AACAE,AACHE,AACE,AAAAW,AAAMX;AAANW,AAAA,AAAA,AAAAA,AAAAP,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAA;AAAA;AACM,AAAA,AAAK,AAAA,AAAA,AAAWF;;;;AACpB,AAAA,AAAWA;;;AANzB,AAOY,AAAAG,AAAMZ;AAANY,AAAA,AAAA,AAAAA,AAAAR,AAAA,AAAAQ,AAAA;AAAA,AAAA,AAAAA;AAAA;AACM,AAAA,AAAK,AAAA,AAAA,AAAWH;;;;AACpB,AAAA,AAAWA;;;;;;AAG7C","names":["com.github.katievogel.bear-ninja-cowboy.player-interaction/click-button","p1-choice","cljs.core.println","p2-choice","cljs.core/rand-nth","winner","com.github.katievogel.bear-ninja-cowboy.game-logic/determine-winner","com.github.katievogel.bear-ninja-cowboy.api-connections/fetch-gif!","G__43445","cljs.core/Keyword","js/Error","result","cljs.core.swap_BANG_","com.github.katievogel.bear-ninja-cowboy.state/app-db","s","cljs.core.assoc","G__43446","G__43447"],"sourcesContent":["(ns com.github.katievogel.bear-ninja-cowboy.player-interaction\n  (:require\n   [com.github.katievogel.bear-ninja-cowboy.api-connections :refer [fetch-gif!]]\n   [com.github.katievogel.bear-ninja-cowboy.game-logic :refer [determine-winner]]\n   [com.github.katievogel.bear-ninja-cowboy.state :refer [app-db]]))\n\n(defn click-button [p1-choice]\n  (println \"in button\" p1-choice)\n  (let [p2-choice (rand-nth [:bear :ninja :cowboy])\n        winner (determine-winner p1-choice p2-choice)]\n    (fetch-gif! (case winner\n                  :p1 p1-choice\n                  :p2 p2-choice\n                  :tie :tie)\n                (fn [result]\n                  (swap! app-db (fn [s]\n                                  (assoc s :winner-gif result)))))\n    (swap! app-db (fn [s]\n                    (assoc s\n                      :p1-choice p1-choice\n                      :p2-choice p2-choice\n                      :winner winner\n                      :p1-score (case winner\n                                  :p1 (inc (:p1-score s 0))\n                                  (:p1-score s))\n                      :p2-score (case winner\n                                  :p2 (inc (:p2-score s 0))\n                                  (:p2-score s)))))))\n\n;test case for debugging\n(comment\n  (let [p1-choice :bear\n        p2-choice :ninja]\n    (case [p1-choice p2-choice]\n      [:bear :ninja] \"Bear bites ninja!\")))\n"]}